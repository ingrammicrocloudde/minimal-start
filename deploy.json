{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "hubVnetName": {
      "type": "string",
      "defaultValue": "hub-vnet",
      "metadata": {
        "description": "Name of the hub VNet"
      }
    },
    "spokeVnetName": {
      "type": "string",
      "defaultValue": "spoke-vnet",
      "metadata": {
        "description": "Name of the spoke VNet"
      }
    },
    "hubAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Address space for the hub VNet"
      }
    },
    "spokeAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.0.0/16",
      "metadata": {
        "description": "Address space for the spoke VNet"
      }
    },
    "hubDefaultSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Subnet address prefix for the default subnet in hub VNet"
      }
    },
    "spokeDefaultSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.1.0.0/24",
      "metadata": {
        "description": "Subnet address prefix for the default subnet in spoke VNet"
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "DC",
      "metadata": {
        "description": "Name of the Windows Server VM"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v4",
      "metadata": {
        "description": "Size of the Windows Server VM"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for the VM"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the VM"
      }
    },
    "clientVmName": {
      "type": "string",
      "defaultValue": "WIN11",
      "metadata": {
        "description": "Name of the Windows 11 client VM"
      }
    },
    "clientVmSize": {
      "type": "string",
      "defaultValue": "Standard_D4s_v4",
      "metadata": {
        "description": "Size of the Windows 11 client VM"
      }
    },
    "timeZone": {
      "type": "string",
      "defaultValue": "Central European Standard Time",
      "metadata": {
        "description": "Time zone for the VMs"
      }
    },
    "enableEntraJoin": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Entra ID (Azure AD) join for the VMs"
      }
    },
    "entraJoinUserAssignedIdentityId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID of the user-assigned managed identity for Entra join (optional)"
      }
    }
  },
  "variables": {
    "hubSubnetName": "default",
    "spokeSubnetName": "default",
    "publicIPAddressName": "[concat(parameters('vmName'), '-pip')]",
    "networkInterfaceName": "[concat(parameters('vmName'), '-nic')]",
    "networkSecurityGroupName": "[concat(parameters('vmName'), '-nsg')]",
    "clientPublicIPAddressName": "[concat(parameters('clientVmName'), '-pip')]",
    "clientNetworkInterfaceName": "[concat(parameters('clientVmName'), '-nic')]",
    "clientNetworkSecurityGroupName": "[concat(parameters('clientVmName'), '-nsg')]",    
    "aadLoginExtensionName": "AADLoginForWindows",
    "aadLoginExtensionVersion": "1.0"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-04-01",
      "name": "[parameters('hubVnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('hubAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('hubSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('hubDefaultSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-04-01",
      "name": "[parameters('spokeVnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('spokeAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('spokeSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('spokeDefaultSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2023-04-01",
      "name": "[concat(parameters('hubVnetName'), '/peering-to-spoke')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVnetName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeVnetName'))]"
      ],
      "properties": {
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": true,
        "allowGatewayTransit": false,
        "useRemoteGateways": false,
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeVnetName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2023-04-01",
      "name": "[concat(parameters('spokeVnetName'), '/peering-to-hub')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVnetName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeVnetName'))]"
      ],
      "properties": {
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": true,
        "allowGatewayTransit": false,
        "useRemoteGateways": false,
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVnetName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-04-01",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[toLower(concat(parameters('vmName'), uniqueString(resourceGroup().id)))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-04-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "priority": 1000,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389"
            }
          },
          {
            "name": "WinRM-HTTPS",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "5986",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1001,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-04-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubVnetName'), variables('hubSubnetName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-03-01",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
      ],
      "identity": "[if(and(parameters('enableEntraJoin'), not(empty(parameters('entraJoinUserAssignedIdentityId')))), createObject('type', 'UserAssigned', 'userAssignedIdentities', createObject(parameters('entraJoinUserAssignedIdentityId'), createObject())), createObject('type', 'SystemAssigned'))]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "timeZone": "[parameters('timeZone')]",
            "patchSettings": {
              "patchMode": "AutomaticByOS",
              "assessmentMode": "ImageDefault",
              "enableHotpatching": false
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'), '-osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-04-01",
      "name": "[variables('clientPublicIPAddressName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[toLower(concat(parameters('clientVmName'), uniqueString(resourceGroup().id)))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-04-01",
      "name": "[variables('clientNetworkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "priority": 1000,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-04-01",
      "name": "[variables('clientNetworkInterfaceName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('clientPublicIPAddressName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('clientNetworkSecurityGroupName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeVnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('clientPublicIPAddressName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('spokeVnetName'), variables('spokeSubnetName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('clientNetworkSecurityGroupName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-03-01",
      "name": "[parameters('clientVmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('clientNetworkInterfaceName'))]"
      ],
      "identity": "[if(and(parameters('enableEntraJoin'), not(empty(parameters('entraJoinUserAssignedIdentityId')))), createObject('type', 'UserAssigned', 'userAssignedIdentities', createObject(parameters('entraJoinUserAssignedIdentityId'), createObject())), createObject('type', 'SystemAssigned'))]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('clientVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('clientVmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "timeZone": "[parameters('timeZone')]",
            "patchSettings": {
              "patchMode": "AutomaticByOS",
              "assessmentMode": "ImageDefault",
              "enableHotpatching": false
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsDesktop",
            "offer": "windows-11",
            "sku": "win11-24h2-avd",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('clientVmName'), '-osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('clientNetworkInterfaceName'))]"
            }
          ]
        }
      }
    }
    
  ],
  "outputs": {
    "vmFqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))).dnsSettings.fqdn]"
    },
    "clientVmFqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('clientPublicIPAddressName'))).dnsSettings.fqdn]"
    },
    "entraJoinEnabled": {
      "type": "bool",
      "value": "[parameters('enableEntraJoin')]"
    }
  }
}